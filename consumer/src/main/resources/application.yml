server:
  port: 8081
spring:
  application:
    name: consumer
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/message?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useAffectedRows=true&serverTimezone=GMT%2B8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      min-idle: 2
      max-active: 10
      initial-size: 4
      max-wait: 600
      validation-query: SELECT 1
      test-on-borrow: true
      test-on-return: false
      test-while-idle: true
      filters: stat,wall,slf4j
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    virtual-host: test
    connection-timeout: 15000
    listener:
      type: simple #
      simple:
        acknowledge-mode: manual # 手动ack
        prefetch: 1 # 每次消费的最大消息数
        concurrency: 3 # 监听的最小队列数
        max-concurrency: 5 #监听的最大队列数
        # 重试机制 这里的重试，指的是springboot的机制，跟rabbitmq本身没有关系，也就是spring在代码中去捕获你没有处理的异常，
        # 注意：如果需要重试的话不能使用Nack，直接抛出异常。
        retry:
          enabled: true # 开启重试
          max-attempts: 3 # 最大重试次数
          stateless: false
          multiplier:  1.0 # 重试时间因子
          initial-interval: 3000 # 重试间隔
          max-interval: 10000 # 最大重试间隔
  redis:
    host: 127.0.0.1
    port: 6379
    database: 1
    timeout: 60000


mybatis:
  type-aliases-package: ink.cwblog.consumer.model
  mapper-locations: classpath:sqlclient/*.xml
